import type { SuiTransactionBlockResponse } from '@mysten/sui.js/client';
import type { CallArg } from '@mysten/sui.js/bcs';
export declare class SuiOwnedObject {
    readonly objectId: string;
    version?: string;
    digest?: string;
    constructor(param: {
        objectId: string;
        version?: string;
        digest?: string;
    });
    /**
     * Check if the object is fully initialized.
     * So that when it's used as an input, it won't be necessary to fetch from fullnode again.
     * Which can save time when sending transactions.
     */
    isFullObject(): boolean;
    asCallArg(): CallArg | string;
    /**
     * Update object version & digest based on the transaction response.
     * @param txResponse
     */
    updateFromTxResponse(txResponse: SuiTransactionBlockResponse): void;
}

{
  "version": 3,
  "sources": ["../../../src/utils/verify.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { fromB64 } from '@mysten/bcs';\nimport nacl from 'tweetnacl';\nimport type { IntentScope } from './intent.js';\nimport { messageWithIntent } from './intent.js';\nimport { secp256k1 } from '@noble/curves/secp256k1';\nimport { sha256 } from '@noble/hashes/sha256';\nimport type { SerializedSignature } from '../cryptography/signature.js';\nimport { blake2b } from '@noble/hashes/blake2b';\nimport { toSingleSignaturePubkeyPair } from '../cryptography/utils.js';\n\n// TODO: This might actually make sense to eventually move to the `Keypair` instances themselves, as\n// it could allow the Sui.js to be tree-shaken a little better, possibly allowing keypairs that are\n// not used (and their deps) to be entirely removed from the bundle.\n\n/** Verify data that is signed with the expected scope. */\nexport async function verifyMessage(\n\tmessage: Uint8Array | string,\n\tserializedSignature: SerializedSignature,\n\tscope: IntentScope,\n) {\n\tconst signature = toSingleSignaturePubkeyPair(serializedSignature);\n\tconst messageBytes = messageWithIntent(\n\t\tscope,\n\t\ttypeof message === 'string' ? fromB64(message) : message,\n\t);\n\tconst digest = blake2b(messageBytes, { dkLen: 32 });\n\tswitch (signature.signatureScheme) {\n\t\tcase 'ED25519':\n\t\t\treturn nacl.sign.detached.verify(digest, signature.signature, signature.pubKey.toBytes());\n\t\tcase 'Secp256k1':\n\t\t\treturn secp256k1.verify(\n\t\t\t\tsecp256k1.Signature.fromCompact(signature.signature),\n\t\t\t\tsha256(digest),\n\t\t\t\tsignature.pubKey.toBytes(),\n\t\t\t);\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown signature scheme: \"${signature.signatureScheme}\"`);\n\t}\n}\n"],
  "mappings": "AAGA,SAAS,eAAe;AACxB,OAAO,UAAU;AAEjB,SAAS,yBAAyB;AAClC,SAAS,iBAAiB;AAC1B,SAAS,cAAc;AAEvB,SAAS,eAAe;AACxB,SAAS,mCAAmC;AAO5C,eAAsB,cACrB,SACA,qBACA,OACC;AACD,QAAM,YAAY,4BAA4B,mBAAmB;AACjE,QAAM,eAAe;AAAA,IACpB;AAAA,IACA,OAAO,YAAY,WAAW,QAAQ,OAAO,IAAI;AAAA,EAClD;AACA,QAAM,SAAS,QAAQ,cAAc,EAAE,OAAO,GAAG,CAAC;AAClD,UAAQ,UAAU,iBAAiB;AAAA,IAClC,KAAK;AACJ,aAAO,KAAK,KAAK,SAAS,OAAO,QAAQ,UAAU,WAAW,UAAU,OAAO,QAAQ,CAAC;AAAA,IACzF,KAAK;AACJ,aAAO,UAAU;AAAA,QAChB,UAAU,UAAU,YAAY,UAAU,SAAS;AAAA,QACnD,OAAO,MAAM;AAAA,QACb,UAAU,OAAO,QAAQ;AAAA,MAC1B;AAAA,IACD;AACC,YAAM,IAAI,MAAM,8BAA8B,UAAU,kBAAkB;AAAA,EAC5E;AACD;",
  "names": []
}

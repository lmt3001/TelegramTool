{
  "version": 3,
  "sources": ["../../../src/framework/framework.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type {\n\tSuiObjectResponse,\n\tSuiMoveObject,\n\tSuiObjectInfo,\n\tSuiObjectData,\n} from '../types/objects.js';\nimport { getObjectFields, getObjectId, getObjectType } from '../types/objects.js';\nimport type { SuiAddress } from '../types/common.js';\nimport { normalizeSuiObjectId, ObjectId } from '../types/common.js';\n\nimport type { Option } from '../types/option.js';\nimport { getOption } from '../types/option.js';\nimport type { CoinStruct } from '../types/coin.js';\nimport type { StructTag } from '../types/sui-bcs.js';\nimport type { Infer } from 'superstruct';\nimport { nullable, number, object, string } from 'superstruct';\n\nexport const SUI_SYSTEM_ADDRESS = '0x3';\nexport const SUI_FRAMEWORK_ADDRESS = '0x2';\nexport const MOVE_STDLIB_ADDRESS = '0x1';\nexport const OBJECT_MODULE_NAME = 'object';\nexport const UID_STRUCT_NAME = 'UID';\nexport const ID_STRUCT_NAME = 'ID';\nexport const SUI_TYPE_ARG = `${SUI_FRAMEWORK_ADDRESS}::sui::SUI`;\nexport const VALIDATORS_EVENTS_QUERY = '0x3::validator_set::ValidatorEpochInfoEventV2';\n\nexport const SUI_CLOCK_OBJECT_ID = normalizeSuiObjectId('0x6');\n\n// `sui::pay` module is used for Coin management (split, join, join_and_transfer etc);\nexport const PAY_MODULE_NAME = 'pay';\nexport const PAY_SPLIT_COIN_VEC_FUNC_NAME = 'split_vec';\nexport const PAY_JOIN_COIN_FUNC_NAME = 'join';\nexport const COIN_TYPE_ARG_REGEX = /^0x2::coin::Coin<(.+)>$/;\n\ntype ObjectData = ObjectDataFull | SuiObjectInfo;\ntype ObjectDataFull = SuiObjectResponse | SuiMoveObject;\n\nexport function isObjectDataFull(resp: ObjectData | ObjectDataFull): resp is SuiObjectResponse {\n\treturn !!(resp as SuiObjectResponse).data || !!(resp as SuiMoveObject).type;\n}\n\nexport const CoinMetadataStruct = object({\n\tdecimals: number(),\n\tname: string(),\n\tsymbol: string(),\n\tdescription: string(),\n\ticonUrl: nullable(string()),\n\tid: nullable(ObjectId),\n});\n\nexport type CoinMetadata = Infer<typeof CoinMetadataStruct>;\n\n/**\n * Utility class for 0x2::coin\n * as defined in https://github.com/MystenLabs/sui/blob/ca9046fd8b1a9e8634a4b74b0e7dabdc7ea54475/sui_programmability/framework/sources/Coin.move#L4\n */\nexport class Coin {\n\tstatic isCoin(data: ObjectData): boolean {\n\t\treturn Coin.getType(data)?.match(COIN_TYPE_ARG_REGEX) != null;\n\t}\n\n\tstatic getCoinType(type: string) {\n\t\tconst [, res] = type.match(COIN_TYPE_ARG_REGEX) ?? [];\n\t\treturn res || null;\n\t}\n\n\tstatic getCoinTypeArg(obj: ObjectData) {\n\t\tconst type = Coin.getType(obj);\n\t\treturn type ? Coin.getCoinType(type) : null;\n\t}\n\n\tstatic isSUI(obj: ObjectData) {\n\t\tconst arg = Coin.getCoinTypeArg(obj);\n\t\treturn arg ? Coin.getCoinSymbol(arg) === 'SUI' : false;\n\t}\n\n\tstatic getCoinSymbol(coinTypeArg: string) {\n\t\treturn coinTypeArg.substring(coinTypeArg.lastIndexOf(':') + 1);\n\t}\n\n\tstatic getCoinStructTag(coinTypeArg: string): StructTag {\n\t\treturn {\n\t\t\taddress: normalizeSuiObjectId(coinTypeArg.split('::')[0]),\n\t\t\tmodule: coinTypeArg.split('::')[1],\n\t\t\tname: coinTypeArg.split('::')[2],\n\t\t\ttypeParams: [],\n\t\t};\n\t}\n\n\tpublic static getID(obj: ObjectData): ObjectId {\n\t\tif ('fields' in obj) {\n\t\t\treturn obj.fields.id.id;\n\t\t}\n\t\treturn getObjectId(obj);\n\t}\n\n\tstatic totalBalance(coins: CoinStruct[]): bigint {\n\t\treturn coins.reduce(\n\t\t\t(partialSum, c) => partialSum + Coin.getBalanceFromCoinStruct(c),\n\t\t\tBigInt(0),\n\t\t);\n\t}\n\n\t/**\n\t * Sort coin by balance in an ascending order\n\t */\n\tstatic sortByBalance(coins: CoinStruct[]): CoinStruct[] {\n\t\treturn [...coins].sort((a, b) =>\n\t\t\tCoin.getBalanceFromCoinStruct(a) < Coin.getBalanceFromCoinStruct(b)\n\t\t\t\t? -1\n\t\t\t\t: Coin.getBalanceFromCoinStruct(a) > Coin.getBalanceFromCoinStruct(b)\n\t\t\t\t? 1\n\t\t\t\t: 0,\n\t\t);\n\t}\n\n\tstatic getBalanceFromCoinStruct(coin: CoinStruct): bigint {\n\t\treturn BigInt(coin.balance);\n\t}\n\n\tstatic getBalance(data: ObjectDataFull): bigint | undefined {\n\t\tif (!Coin.isCoin(data)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst balance = getObjectFields(data)?.balance;\n\t\treturn BigInt(balance);\n\t}\n\n\tprivate static getType(data: ObjectData): string | undefined {\n\t\tif (isObjectDataFull(data)) {\n\t\t\treturn getObjectType(data);\n\t\t}\n\t\treturn data.type;\n\t}\n}\n\nexport type DelegationData = SuiMoveObject & {\n\tdataType: 'moveObject';\n\ttype: '0x2::delegation::Delegation';\n\tfields: {\n\t\tactive_delegation: Option<number>;\n\t\tdelegate_amount: number;\n\t\tnext_reward_unclaimed_epoch: number;\n\t\tvalidator_address: SuiAddress;\n\t\tinfo: {\n\t\t\tid: string;\n\t\t\tversion: number;\n\t\t};\n\t\t// TODO (jian): clean up after 0.34\n\t\tcoin_locked_until_epoch: Option<SuiMoveObject>;\n\t\tending_epoch: Option<number>;\n\t};\n};\n\nexport type DelegationSuiObject = Omit<SuiObjectData, 'data'> & {\n\tdata: DelegationData;\n};\n\n// Class for delegation.move\n// see https://github.com/MystenLabs/fastnft/blob/161aa27fe7eb8ecf2866ec9eb192e768f25da768/crates/sui-framework/sources/governance/delegation.move\nexport class Delegation {\n\tpublic static readonly SUI_OBJECT_TYPE = '0x2::delegation::Delegation';\n\tprivate suiObject: DelegationSuiObject;\n\n\tpublic static isDelegationSuiObject(obj: SuiObjectData): obj is DelegationSuiObject {\n\t\treturn 'type' in obj && obj.type === Delegation.SUI_OBJECT_TYPE;\n\t}\n\n\tconstructor(obj: DelegationSuiObject) {\n\t\tthis.suiObject = obj;\n\t}\n\n\tpublic nextRewardUnclaimedEpoch() {\n\t\treturn this.suiObject.data.fields.next_reward_unclaimed_epoch;\n\t}\n\n\tpublic activeDelegation() {\n\t\treturn BigInt(getOption(this.suiObject.data.fields.active_delegation) || 0);\n\t}\n\n\tpublic delegateAmount() {\n\t\treturn this.suiObject.data.fields.delegate_amount;\n\t}\n\n\tpublic endingEpoch() {\n\t\treturn getOption(this.suiObject.data.fields.ending_epoch);\n\t}\n\n\tpublic validatorAddress() {\n\t\treturn this.suiObject.data.fields.validator_address;\n\t}\n\n\tpublic isActive() {\n\t\treturn this.activeDelegation() > 0 && !this.endingEpoch();\n\t}\n\n\tpublic hasUnclaimedRewards(epoch: number) {\n\t\treturn (\n\t\t\tthis.nextRewardUnclaimedEpoch() <= epoch &&\n\t\t\t(this.isActive() || (this.endingEpoch() || 0) > epoch)\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}

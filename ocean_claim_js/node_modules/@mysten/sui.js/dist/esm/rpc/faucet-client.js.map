{
  "version": 3,
  "sources": ["../../../src/rpc/faucet-client.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { FaucetResponse, SuiAddress } from '../types/index.js';\nimport { FaucetRateLimitError } from '../utils/errors.js';\nimport type { HttpHeaders } from './client.js';\n\nexport async function requestSuiFromFaucet(\n\tendpoint: string,\n\trecipient: SuiAddress,\n\thttpHeaders?: HttpHeaders,\n): Promise<FaucetResponse> {\n\tconst res = await fetch(endpoint, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify({\n\t\t\tFixedAmountRequest: {\n\t\t\t\trecipient,\n\t\t\t},\n\t\t}),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t...(httpHeaders || {}),\n\t\t},\n\t});\n\n\tif (res.status === 429) {\n\t\tthrow new FaucetRateLimitError(\n\t\t\t`Too many requests from this client have been sent to the faucet. Please retry later`,\n\t\t);\n\t}\n\tlet parsed;\n\ttry {\n\t\tparsed = await res.json();\n\t} catch (e) {\n\t\tthrow new Error(\n\t\t\t`Encountered error when parsing response from faucet, error: ${e}, status ${res.status}, response ${res}`,\n\t\t);\n\t}\n\tif (parsed.error) {\n\t\tthrow new Error(`Faucet returns error: ${parsed.error}`);\n\t}\n\treturn parsed;\n}\n"],
  "mappings": "AAIA,SAAS,4BAA4B;AAGrC,eAAsB,qBACrB,UACA,WACA,aAC0B;AAC1B,QAAM,MAAM,MAAM,MAAM,UAAU;AAAA,IACjC,QAAQ;AAAA,IACR,MAAM,KAAK,UAAU;AAAA,MACpB,oBAAoB;AAAA,QACnB;AAAA,MACD;AAAA,IACD,CAAC;AAAA,IACD,SAAS;AAAA,MACR,gBAAgB;AAAA,MAChB,GAAI,eAAe,CAAC;AAAA,IACrB;AAAA,EACD,CAAC;AAED,MAAI,IAAI,WAAW,KAAK;AACvB,UAAM,IAAI;AAAA,MACT;AAAA,IACD;AAAA,EACD;AACA,MAAI;AACJ,MAAI;AACH,aAAS,MAAM,IAAI,KAAK;AAAA,EACzB,SAAS,GAAP;AACD,UAAM,IAAI;AAAA,MACT,+DAA+D,aAAa,IAAI,oBAAoB;AAAA,IACrG;AAAA,EACD;AACA,MAAI,OAAO,OAAO;AACjB,UAAM,IAAI,MAAM,yBAAyB,OAAO,OAAO;AAAA,EACxD;AACA,SAAO;AACR;",
  "names": []
}

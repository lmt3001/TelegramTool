{
  "version": 3,
  "sources": ["../../../src/rpc/client.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RequestManager, HTTPTransport, Client } from '@open-rpc/client-js';\nimport type { Struct } from 'superstruct';\nimport { validate } from 'superstruct';\nimport { PACKAGE_VERSION, TARGETED_RPC_VERSION } from '../version.js';\nimport { RPCValidationError } from '../utils/errors.js';\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = { [header: string]: string };\n\nexport class JsonRpcClient {\n\tprivate rpcClient: Client;\n\n\tconstructor(url: string, httpHeaders?: HttpHeaders) {\n\t\tconst transport = new HTTPTransport(url, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Client-Sdk-Type': 'typescript',\n\t\t\t\t'Client-Sdk-Version': PACKAGE_VERSION,\n\t\t\t\t'Client-Target-Api-Version': TARGETED_RPC_VERSION,\n\t\t\t\t...httpHeaders,\n\t\t\t},\n\t\t});\n\n\t\tthis.rpcClient = new Client(new RequestManager([transport]));\n\t}\n\n\tasync requestWithType<T>(method: string, args: any[], struct: Struct<T>): Promise<T> {\n\t\tconst req = { method, args };\n\n\t\tconst response = await this.request(method, args);\n\n\t\tif (process.env.NODE_ENV === 'test') {\n\t\t\tconst [err] = validate(response, struct);\n\t\t\tif (err) {\n\t\t\t\tthrow new RPCValidationError({\n\t\t\t\t\treq,\n\t\t\t\t\tresult: response,\n\t\t\t\t\tcause: err,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tasync request(method: string, params: any[]): Promise<any> {\n\t\treturn await this.rpcClient.request({ method, params });\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,uBAAsD;AAEtD,yBAAyB;AACzB,qBAAsD;AACtD,oBAAmC;AAO5B,MAAM,cAAc;AAAA,EAG1B,YAAY,KAAa,aAA2B;AACnD,UAAM,YAAY,IAAI,+BAAc,KAAK;AAAA,MACxC,SAAS;AAAA,QACR,gBAAgB;AAAA,QAChB,mBAAmB;AAAA,QACnB,sBAAsB;AAAA,QACtB,6BAA6B;AAAA,QAC7B,GAAG;AAAA,MACJ;AAAA,IACD,CAAC;AAED,SAAK,YAAY,IAAI,wBAAO,IAAI,gCAAe,CAAC,SAAS,CAAC,CAAC;AAAA,EAC5D;AAAA,EAEA,MAAM,gBAAmB,QAAgB,MAAa,QAA+B;AACpF,UAAM,MAAM,EAAE,QAAQ,KAAK;AAE3B,UAAM,WAAW,MAAM,KAAK,QAAQ,QAAQ,IAAI;AAEhD,QAAI,OAAiC;AACpC,YAAM,CAAC,GAAG,IAAI,SAAS,UAAU,MAAM;AACvC,UAAI,KAAK;AACR,cAAM,IAAI,mBAAmB;AAAA,UAC5B;AAAA,UACA,QAAQ;AAAA,UACR,OAAO;AAAA,QACR,CAAC;AAAA,MACF;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,QAAQ,QAAgB,QAA6B;AAC1D,WAAO,MAAM,KAAK,UAAU,QAAQ,EAAE,QAAQ,OAAO,CAAC;AAAA,EACvD;AACD;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../src/types/objects.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { Infer } from 'superstruct';\nimport {\n\tany,\n\tarray,\n\tassign,\n\tboolean,\n\tliteral,\n\tnumber,\n\tobject,\n\toptional,\n\trecord,\n\tstring,\n\tunion,\n\tis,\n\tnullable,\n\ttuple,\n} from 'superstruct';\nimport { ObjectId, ObjectOwner, SequenceNumber, TransactionDigest } from './common.js';\nimport type { OwnedObjectRef } from './transactions.js';\n\nexport const ObjectType = union([string(), literal('package')]);\nexport type ObjectType = Infer<typeof ObjectType>;\n\nexport const SuiObjectRef = object({\n\t/** Base64 string representing the object digest */\n\tdigest: TransactionDigest,\n\t/** Hex code as string representing the object id */\n\tobjectId: string(),\n\t/** Object version */\n\tversion: union([number(), string()]),\n});\nexport type SuiObjectRef = Infer<typeof SuiObjectRef>;\n\nexport const SuiGasData = object({\n\tpayment: array(SuiObjectRef),\n\t/** Gas Object's owner */\n\towner: string(),\n\tprice: string(),\n\tbudget: string(),\n});\nexport type SuiGasData = Infer<typeof SuiGasData>;\n\nexport const SuiObjectInfo = assign(\n\tSuiObjectRef,\n\tobject({\n\t\ttype: string(),\n\t\towner: ObjectOwner,\n\t\tpreviousTransaction: TransactionDigest,\n\t}),\n);\nexport type SuiObjectInfo = Infer<typeof SuiObjectInfo>;\n\nexport const ObjectContentFields = record(string(), any());\nexport type ObjectContentFields = Infer<typeof ObjectContentFields>;\n\nexport const MovePackageContent = record(string(), string());\nexport type MovePackageContent = Infer<typeof MovePackageContent>;\n\nexport const SuiMoveObject = object({\n\t/** Move type (e.g., \"0x2::coin::Coin<0x2::sui::SUI>\") */\n\ttype: string(),\n\t/** Fields and values stored inside the Move object */\n\tfields: ObjectContentFields,\n\thasPublicTransfer: boolean(),\n});\nexport type SuiMoveObject = Infer<typeof SuiMoveObject>;\n\nexport const SuiMovePackage = object({\n\t/** A mapping from module name to disassembled Move bytecode */\n\tdisassembled: MovePackageContent,\n});\nexport type SuiMovePackage = Infer<typeof SuiMovePackage>;\n\nexport const SuiParsedData = union([\n\tassign(SuiMoveObject, object({ dataType: literal('moveObject') })),\n\tassign(SuiMovePackage, object({ dataType: literal('package') })),\n]);\nexport type SuiParsedData = Infer<typeof SuiParsedData>;\n\nexport const SuiRawMoveObject = object({\n\t/** Move type (e.g., \"0x2::coin::Coin<0x2::sui::SUI>\") */\n\ttype: string(),\n\thasPublicTransfer: boolean(),\n\tversion: number(),\n\tbcsBytes: string(),\n});\nexport type SuiRawMoveObject = Infer<typeof SuiRawMoveObject>;\n\nexport const SuiRawMovePackage = object({\n\tid: ObjectId,\n\t/** A mapping from module name to Move bytecode enocded in base64*/\n\tmoduleMap: record(string(), string()),\n});\nexport type SuiRawMovePackage = Infer<typeof SuiRawMovePackage>;\n\n// TODO(chris): consolidate SuiRawParsedData and SuiRawObject using generics\nexport const SuiRawData = union([\n\tassign(SuiRawMoveObject, object({ dataType: literal('moveObject') })),\n\tassign(SuiRawMovePackage, object({ dataType: literal('package') })),\n]);\nexport type SuiRawData = Infer<typeof SuiRawData>;\n\nexport const SUI_DECIMALS = 9;\n\nexport const MIST_PER_SUI = BigInt(1000000000);\n\nexport const ObjectDigest = string();\nexport type ObjectDigest = Infer<typeof ObjectDigest>;\nexport const SuiObjectResponseError = object({\n\tcode: string(),\n\terror: optional(string()),\n\tobject_id: optional(ObjectId),\n\tparent_object_id: optional(ObjectId),\n\tversion: optional(number()),\n\tdigest: optional(ObjectDigest),\n});\nexport type SuiObjectResponseError = Infer<typeof SuiObjectResponseError>;\nexport const DisplayFieldsResponse = object({\n\tdata: nullable(record(string(), string())),\n\terror: nullable(SuiObjectResponseError),\n});\nexport type DisplayFieldsResponse = Infer<typeof DisplayFieldsResponse>;\n// TODO: remove after all envs support the new DisplayFieldsResponse;\nexport const DisplayFieldsBackwardCompatibleResponse = union([\n\tDisplayFieldsResponse,\n\toptional(record(string(), string())),\n]);\nexport type DisplayFieldsBackwardCompatibleResponse = Infer<\n\ttypeof DisplayFieldsBackwardCompatibleResponse\n>;\n\nexport const SuiObjectData = object({\n\tobjectId: ObjectId,\n\tversion: SequenceNumber,\n\tdigest: ObjectDigest,\n\t/**\n\t * Type of the object, default to be undefined unless SuiObjectDataOptions.showType is set to true\n\t */\n\ttype: optional(string()),\n\t/**\n\t * Move object content or package content, default to be undefined unless SuiObjectDataOptions.showContent is set to true\n\t */\n\tcontent: optional(SuiParsedData),\n\t/**\n\t * Move object content or package content in BCS bytes, default to be undefined unless SuiObjectDataOptions.showBcs is set to true\n\t */\n\tbcs: optional(SuiRawData),\n\t/**\n\t * The owner of this object. Default to be undefined unless SuiObjectDataOptions.showOwner is set to true\n\t */\n\towner: optional(ObjectOwner),\n\t/**\n\t * The digest of the transaction that created or last mutated this object.\n\t * Default to be undefined unless SuiObjectDataOptions.showPreviousTransaction is set to true\n\t */\n\tpreviousTransaction: optional(TransactionDigest),\n\t/**\n\t * The amount of SUI we would rebate if this object gets deleted.\n\t * This number is re-calculated each time the object is mutated based on\n\t * the present storage gas price.\n\t * Default to be undefined unless SuiObjectDataOptions.showStorageRebate is set to true\n\t */\n\tstorageRebate: optional(string()),\n\t/**\n\t * Display metadata for this object, default to be undefined unless SuiObjectDataOptions.showDisplay is set to true\n\t * This can also be None if the struct type does not have Display defined\n\t * See more details in https://forums.sui.io/t/nft-object-display-proposal/4872\n\t */\n\tdisplay: optional(DisplayFieldsBackwardCompatibleResponse),\n});\nexport type SuiObjectData = Infer<typeof SuiObjectData>;\n\n/**\n * Config for fetching object data\n */\nexport const SuiObjectDataOptions = object({\n\t/* Whether to fetch the object type, default to be true */\n\tshowType: optional(boolean()),\n\t/* Whether to fetch the object content, default to be false */\n\tshowContent: optional(boolean()),\n\t/* Whether to fetch the object content in BCS bytes, default to be false */\n\tshowBcs: optional(boolean()),\n\t/* Whether to fetch the object owner, default to be false */\n\tshowOwner: optional(boolean()),\n\t/* Whether to fetch the previous transaction digest, default to be false */\n\tshowPreviousTransaction: optional(boolean()),\n\t/* Whether to fetch the storage rebate, default to be false */\n\tshowStorageRebate: optional(boolean()),\n\t/* Whether to fetch the display metadata, default to be false */\n\tshowDisplay: optional(boolean()),\n});\nexport type SuiObjectDataOptions = Infer<typeof SuiObjectDataOptions>;\n\nexport const ObjectStatus = union([literal('Exists'), literal('notExists'), literal('Deleted')]);\nexport type ObjectStatus = Infer<typeof ObjectStatus>;\n\nexport const GetOwnedObjectsResponse = array(SuiObjectInfo);\nexport type GetOwnedObjectsResponse = Infer<typeof GetOwnedObjectsResponse>;\n\nexport const SuiObjectResponse = object({\n\tdata: optional(SuiObjectData),\n\terror: optional(SuiObjectResponseError),\n});\nexport type SuiObjectResponse = Infer<typeof SuiObjectResponse>;\n\nexport type Order = 'ascending' | 'descending';\n\n/* -------------------------------------------------------------------------- */\n/*                              Helper functions                              */\n/* -------------------------------------------------------------------------- */\n\n/* -------------------------- SuiObjectResponse ------------------------- */\n\nexport function getSuiObjectData(resp: SuiObjectResponse): SuiObjectData | undefined {\n\treturn resp.data;\n}\n\nexport function getObjectDeletedResponse(resp: SuiObjectResponse): SuiObjectRef | undefined {\n\tif (\n\t\tresp.error &&\n\t\t'object_id' in resp.error &&\n\t\t'version' in resp.error &&\n\t\t'digest' in resp.error\n\t) {\n\t\tconst error = resp.error as SuiObjectResponseError;\n\t\treturn {\n\t\t\tobjectId: error.object_id,\n\t\t\tversion: error.version,\n\t\t\tdigest: error.digest,\n\t\t} as SuiObjectRef;\n\t}\n\n\treturn undefined;\n}\n\nexport function getObjectNotExistsResponse(resp: SuiObjectResponse): ObjectId | undefined {\n\tif (\n\t\tresp.error &&\n\t\t'object_id' in resp.error &&\n\t\t!('version' in resp.error) &&\n\t\t!('digest' in resp.error)\n\t) {\n\t\treturn (resp.error as SuiObjectResponseError).object_id as ObjectId;\n\t}\n\n\treturn undefined;\n}\n\nexport function getObjectReference(\n\tresp: SuiObjectResponse | OwnedObjectRef,\n): SuiObjectRef | undefined {\n\tif ('reference' in resp) {\n\t\treturn resp.reference;\n\t}\n\tconst exists = getSuiObjectData(resp);\n\tif (exists) {\n\t\treturn {\n\t\t\tobjectId: exists.objectId,\n\t\t\tversion: exists.version,\n\t\t\tdigest: exists.digest,\n\t\t};\n\t}\n\treturn getObjectDeletedResponse(resp);\n}\n\n/* ------------------------------ SuiObjectRef ------------------------------ */\n\nexport function getObjectId(data: SuiObjectResponse | SuiObjectRef | OwnedObjectRef): ObjectId {\n\tif ('objectId' in data) {\n\t\treturn data.objectId;\n\t}\n\treturn (\n\t\tgetObjectReference(data)?.objectId ?? getObjectNotExistsResponse(data as SuiObjectResponse)!\n\t);\n}\n\nexport function getObjectVersion(\n\tdata: SuiObjectResponse | SuiObjectRef | SuiObjectData,\n): string | number | undefined {\n\tif ('version' in data) {\n\t\treturn data.version;\n\t}\n\treturn getObjectReference(data)?.version;\n}\n\n/* -------------------------------- SuiObject ------------------------------- */\n\nexport function isSuiObjectResponse(\n\tresp: SuiObjectResponse | SuiObjectData,\n): resp is SuiObjectResponse {\n\treturn (resp as SuiObjectResponse).data !== undefined;\n}\n\n/**\n * Deriving the object type from the object response\n * @returns 'package' if the object is a package, move object type(e.g., 0x2::coin::Coin<0x2::sui::SUI>)\n * if the object is a move object\n */\nexport function getObjectType(resp: SuiObjectResponse | SuiObjectData): ObjectType | undefined {\n\tconst data = isSuiObjectResponse(resp) ? resp.data : resp;\n\n\tif (!data?.type && 'data' in resp) {\n\t\tif (data?.content?.dataType === 'package') {\n\t\t\treturn 'package';\n\t\t}\n\t\treturn getMoveObjectType(resp);\n\t}\n\treturn data?.type;\n}\n\nexport function getObjectPreviousTransactionDigest(\n\tresp: SuiObjectResponse,\n): TransactionDigest | undefined {\n\treturn getSuiObjectData(resp)?.previousTransaction;\n}\n\nexport function getObjectOwner(resp: SuiObjectResponse | ObjectOwner): ObjectOwner | undefined {\n\tif (is(resp, ObjectOwner)) {\n\t\treturn resp;\n\t}\n\treturn getSuiObjectData(resp)?.owner;\n}\n\nexport function getObjectDisplay(resp: SuiObjectResponse): DisplayFieldsResponse {\n\tconst display = getSuiObjectData(resp)?.display;\n\tif (!display) {\n\t\treturn { data: null, error: null };\n\t}\n\tif (is(display, DisplayFieldsResponse)) {\n\t\treturn display;\n\t}\n\treturn {\n\t\tdata: display,\n\t\terror: null,\n\t};\n}\n\nexport function getSharedObjectInitialVersion(\n\tresp: SuiObjectResponse | ObjectOwner,\n): number | undefined {\n\tconst owner = getObjectOwner(resp);\n\tif (typeof owner === 'object' && 'Shared' in owner) {\n\t\treturn owner.Shared.initial_shared_version;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function isSharedObject(resp: SuiObjectResponse | ObjectOwner): boolean {\n\tconst owner = getObjectOwner(resp);\n\treturn typeof owner === 'object' && 'Shared' in owner;\n}\n\nexport function isImmutableObject(resp: SuiObjectResponse | ObjectOwner): boolean {\n\tconst owner = getObjectOwner(resp);\n\treturn owner === 'Immutable';\n}\n\nexport function getMoveObjectType(resp: SuiObjectResponse): string | undefined {\n\treturn getMoveObject(resp)?.type;\n}\n\nexport function getObjectFields(\n\tresp: SuiObjectResponse | SuiMoveObject | SuiObjectData,\n): ObjectContentFields | undefined {\n\tif ('fields' in resp) {\n\t\treturn resp.fields;\n\t}\n\treturn getMoveObject(resp)?.fields;\n}\n\nexport interface SuiObjectDataWithContent extends SuiObjectData {\n\tcontent: SuiParsedData;\n}\n\nfunction isSuiObjectDataWithContent(data: SuiObjectData): data is SuiObjectDataWithContent {\n\treturn data.content !== undefined;\n}\n\nexport function getMoveObject(data: SuiObjectResponse | SuiObjectData): SuiMoveObject | undefined {\n\tconst suiObject = 'data' in data ? getSuiObjectData(data) : (data as SuiObjectData);\n\n\tif (\n\t\t!suiObject ||\n\t\t!isSuiObjectDataWithContent(suiObject) ||\n\t\tsuiObject.content.dataType !== 'moveObject'\n\t) {\n\t\treturn undefined;\n\t}\n\n\treturn suiObject.content as SuiMoveObject;\n}\n\nexport function hasPublicTransfer(data: SuiObjectResponse | SuiObjectData): boolean {\n\treturn getMoveObject(data)?.hasPublicTransfer ?? false;\n}\n\nexport function getMovePackageContent(\n\tdata: SuiObjectResponse | SuiMovePackage,\n): MovePackageContent | undefined {\n\tif ('disassembled' in data) {\n\t\treturn data.disassembled;\n\t}\n\tconst suiObject = getSuiObjectData(data);\n\tif (suiObject?.content?.dataType !== 'package') {\n\t\treturn undefined;\n\t}\n\treturn (suiObject.content as SuiMovePackage).disassembled;\n}\n\nexport const CheckpointedObjectId = object({\n\tobjectId: ObjectId,\n\tatCheckpoint: optional(number()),\n});\nexport type CheckpointedObjectId = Infer<typeof CheckpointedObjectId>;\n\nexport const PaginatedObjectsResponse = object({\n\tdata: array(SuiObjectResponse),\n\t// TODO: remove union after 0.30.0 is released\n\tnextCursor: union([nullable(ObjectId), nullable(CheckpointedObjectId)]),\n\thasNextPage: boolean(),\n});\nexport type PaginatedObjectsResponse = Infer<typeof PaginatedObjectsResponse>;\n\n// mirrors sui_json_rpc_types:: SuiObjectDataFilter\nexport type SuiObjectDataFilter =\n\t| { MatchAll: SuiObjectDataFilter[] }\n\t| { MatchAny: SuiObjectDataFilter[] }\n\t| { MatchNone: SuiObjectDataFilter[] }\n\t| { Package: ObjectId }\n\t| { MoveModule: { package: ObjectId; module: string } }\n\t| { StructType: string }\n\t| { AddressOwner: string }\n\t| { ObjectOwner: string }\n\t| { ObjectId: string }\n\t| { ObjectIds: string[] }\n\t| { Version: string };\n\nexport type SuiObjectResponseQuery = {\n\tfilter?: SuiObjectDataFilter;\n\toptions?: SuiObjectDataOptions;\n};\n\nexport const ObjectRead = union([\n\tobject({\n\t\tdetails: SuiObjectData,\n\t\tstatus: literal('VersionFound'),\n\t}),\n\tobject({\n\t\tdetails: ObjectId,\n\t\tstatus: literal('ObjectNotExists'),\n\t}),\n\tobject({\n\t\tdetails: SuiObjectRef,\n\t\tstatus: literal('ObjectDeleted'),\n\t}),\n\tobject({\n\t\tdetails: tuple([ObjectId, number()]),\n\t\tstatus: literal('VersionNotFound'),\n\t}),\n\tobject({\n\t\tdetails: object({\n\t\t\tasked_version: number(),\n\t\t\tlatest_version: number(),\n\t\t\tobject_id: ObjectId,\n\t\t}),\n\t\tstatus: literal('VersionTooHigh'),\n\t}),\n]);\nexport type ObjectRead = Infer<typeof ObjectRead>;\n"],
  "mappings": "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",
  "names": []
}

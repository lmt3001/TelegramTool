import type { PublicKey, PublicKeyInitData } from '../../cryptography/publickey.js';
/**
 * A Secp256r1 public key
 */
export declare class Secp256r1PublicKey implements PublicKey {
    static SIZE: number;
    private data;
    /**
     * Create a new Secp256r1PublicKey object
     * @param value secp256r1 public key as buffer or base-64 encoded string
     */
    constructor(value: PublicKeyInitData);
    /**
     * Checks if two Secp256r1 public keys are equal
     */
    equals(publicKey: Secp256r1PublicKey): boolean;
    /**
     * Return the base-64 representation of the Secp256r1 public key
     */
    toBase64(): string;
    /**
     * Return the byte array representation of the Secp256r1 public key
     */
    toBytes(): Uint8Array;
    /**
     * Return the base-64 representation of the Secp256r1 public key
     */
    toString(): string;
    /**
     * Return the Sui address associated with this Secp256r1 public key
     */
    toSuiAddress(): string;
    /**
     * Return the Sui address associated with this Secp256r1 public key
     */
    flag(): number;
}
